!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ALARM_BUSINESS_TYPE_BB	Contactor.h	25;"	d
ALARM_BUSINESS_TYPE_FIX	Contactor.h	24;"	d
ALARM_BUSINESS_TYPE_HS	Contactor.h	26;"	d
ALARM_BUSINESS_TYPE_JZ	Contactor.h	27;"	d
ALARM_LEVEL_TYPE_ERROR	Contactor.h	20;"	d
ALARM_LEVEL_TYPE_FATAL	Contactor.h	21;"	d
ALARM_LEVEL_TYPE_WARNNING	Contactor.h	19;"	d
Accept	Socket.cpp	/^int CSocket::Accept()$/;"	f	class:CSocket
Add	Contactor.cpp	/^bool CContactor::Add(PCONTACTORINFO pInfo)$/;"	f	class:CContactor
Add	NotifyMgr.cpp	/^bool CNotifyMgr::Add(CNotify* pNotify)$/;"	f	class:CNotifyMgr
Attach	Socket.cpp	/^bool CSocket::Attach(int nfd)$/;"	f	class:CSocket
BUFLEN_EMAIL	Notify.h	17;"	d
BUFLEN_TYPE_EMAIL	Contactor.h	14;"	d
BUFLEN_TYPE_NAME	Contactor.h	13;"	d
BUFLEN_USERNAME	Notify.h	16;"	d
Bind	Socket.cpp	/^bool CSocket::Bind(int nHostPort\/* = 0*\/, const char* pszHostAddress\/* = nullptr*\/)$/;"	f	class:CSocket
CAlarmService	AlarmService.cpp	/^CAlarmService::CAlarmService()$/;"	f	class:CAlarmService
CAlarmService	AlarmService.h	/^class CAlarmService : public CService $/;"	c
CContactor	Contactor.cpp	/^CContactor::CContactor()$/;"	f	class:CContactor
CContactor	Contactor.h	/^class CContactor$/;"	c
CICC_IT_UINT_TYPE_ETL	Notify.h	/^	CICC_IT_UINT_TYPE_ETL,			\/\/ETL 项目组$/;"	e	enum:emITUint
CICC_IT_UINY_TYPE_SUM	Notify.h	/^	CICC_IT_UINY_TYPE_SUM$/;"	e	enum:emITUint
CMail	mail.cpp	/^CMail::CMail():m_nPort(25)$/;"	f	class:CMail
CMail	mail.h	/^class CMail : public CNotify$/;"	c
CNotify	Notify.cpp	/^CNotify::CNotify()$/;"	f	class:CNotify
CNotify	Notify.h	/^class CNotify$/;"	c
CNotifyMgr	NotifyMgr.cpp	/^CNotifyMgr::CNotifyMgr()$/;"	f	class:CNotifyMgr
CNotifyMgr	NotifyMgr.h	/^class CNotifyMgr $/;"	c
CONTACTORINFO	Contactor.h	/^}CONTACTORINFO,*PCONTACTORINFO;$/;"	t	typeref:struct:stContactor
CONTACTORINFO	Notify.h	/^}CONTACTORINFO,*PCONTACTORINFO;$/;"	t	typeref:struct:stContactorInfo
CONTACTORPtr	Contactor.h	/^typedef std::shared_ptr<CONTACTORINFO> CONTACTORPtr;$/;"	t
CService	Service.cpp	/^CService::CService()$/;"	f	class:CService
CService	Service.h	/^class CService$/;"	c
CServiceTpl	ServiceTpl.h	/^class CServiceTpl$/;"	c
CSocket	Socket.cpp	/^CSocket::CSocket()$/;"	f	class:CSocket
CSocket	Socket.h	/^class CSocket$/;"	c
Close	Socket.cpp	/^void CSocket::Close()$/;"	f	class:CSocket
Connect	Notify.cpp	/^bool CNotify::Connect(const char* pszAddr, int nPort)$/;"	f	class:CNotify
Connect	Socket.cpp	/^bool CSocket::Connect(const char* pszAddress, int nPort)$/;"	f	class:CSocket
ConnectMailSvr	mail.cpp	/^bool CMail::ConnectMailSvr()$/;"	f	class:CMail
Create	Socket.cpp	/^int  CSocket::Create(int nDomain\/* = AF_INET*\/, int nSockType\/* = SOCK_STREAM*\/, int nProtocol\/* = IPPROTO_IP*\/)$/;"	f	class:CSocket
Del	Contactor.cpp	/^bool CContactor::Del(PCONTACTORINFO pInfo)$/;"	f	class:CContactor
Del	NotifyMgr.cpp	/^bool CNotifyMgr::Del(CNotify* pNotify)$/;"	f	class:CNotifyMgr
Detach	Socket.cpp	/^int  CSocket::Detach()$/;"	f	class:CSocket
Execute	Service.cpp	/^bool CService::Execute(const char* pszFileName \/*= ""*\/, int nLine\/*= 0*\/)$/;"	f	class:CService
Execute	ServiceTpl.h	/^	int Execute(const char* pszServiceName)$/;"	f	class:CServiceTpl
Find	Contactor.cpp	/^CONTACTORPtr  CContactor::Find(PCONTACTORINFO pUser)$/;"	f	class:CContactor
GetNotifyList	Contactor.cpp	/^bool CContactor::GetNotifyList(std::vector<CONTACTORPtr>& listNotify, int nAlarmLevel, std::string strType)$/;"	f	class:CContactor
GetNotifyUser	Contactor.cpp	/^void CContactor::GetNotifyUser(const char* pszConfigureName)$/;"	f	class:CContactor
GetPeerName	Socket.cpp	/^bool CSocket::GetPeerName(struct sockaddr* PeerSockAddr, socklen_t* nAddrLen)$/;"	f	class:CSocket
GetRecvMailAddr	Notify.cpp	/^bool CNotify::GetRecvMailAddr(std::vector<std::string>& listRecvMailContactor)$/;"	f	class:CNotify
GetSockName	Socket.cpp	/^bool CSocket::GetSockName(struct sockaddr* LocalSockaddr, socklen_t* nAddrLen)$/;"	f	class:CSocket
GetSockOpt	Socket.cpp	/^bool CSocket::GetSockOpt(int nLevel, int OptName, void* Optval,socklen_t* pOptLen)$/;"	f	class:CSocket
Init	Contactor.cpp	/^bool CContactor::Init(const char* pszFileName)$/;"	f	class:CContactor
Init	NotifyMgr.cpp	/^bool CNotifyMgr::Init(const char* pszConfigPath)$/;"	f	class:CNotifyMgr
InvokeTerminate	AlarmService.cpp	/^bool CAlarmService::InvokeTerminate()$/;"	f	class:CAlarmService
Listen	Socket.cpp	/^bool CSocket::Listen(int nListenCount\/* = 10*\/)$/;"	f	class:CSocket
LogError	Log.h	15;"	d
LogInfo	Log.h	11;"	d
LogOn	mail.cpp	/^bool CMail::LogOn()$/;"	f	class:CMail
LogOut	mail.cpp	/^bool CMail::LogOut()$/;"	f	class:CMail
LogTest	Log.h	17;"	d
LogWarn	Log.h	13;"	d
OnInitialUpdate	AlarmService.cpp	/^bool CAlarmService::OnInitialUpdate()$/;"	f	class:CAlarmService
OnIntialUpdate	Notify.cpp	/^bool CNotify::OnIntialUpdate(const char* pszConfigFileName)$/;"	f	class:CNotify
OnIntialUpdate	mail.cpp	/^bool CMail::OnIntialUpdate(const char* pszConfigFileName)$/;"	f	class:CMail
OnSecondIdle	AlarmService.cpp	/^bool CAlarmService::OnSecondIdle()$/;"	f	class:CAlarmService
OnTerminate	AlarmService.cpp	/^bool CAlarmService::OnTerminate()$/;"	f	class:CAlarmService
OnTimeout	AlarmService.cpp	/^bool CAlarmService::OnTimeout(struct tm* pTime)$/;"	f	class:CAlarmService
OnTimeout	Contactor.cpp	/^bool CContactor::OnTimeout(struct tm* pTime)$/;"	f	class:CContactor
OnTimeout	Notify.cpp	/^bool CNotify::OnTimeout(struct tm* pTime)$/;"	f	class:CNotify
PCONTACTORINFO	Contactor.h	/^}CONTACTORINFO,*PCONTACTORINFO;$/;"	t	typeref:struct:stContactor
PCONTACTORINFO	Notify.h	/^}CONTACTORINFO,*PCONTACTORINFO;$/;"	t	typeref:struct:stContactorInfo
Recv	Socket.cpp	/^bool CSocket::Recv(char* pszBuf, int nBufLen)$/;"	f	class:CSocket
RecvMsg	Notify.cpp	/^bool CNotify::RecvMsg(char* pszBuf, int nBufLen)$/;"	f	class:CNotify
SecondeIdle	Service.cpp	/^static void SecondeIdle(CService* pService)$/;"	f	file:
Send	NotifyMgr.cpp	/^bool CNotifyMgr::Send(const char* pszWarnInfo)$/;"	f	class:CNotifyMgr
Send	Socket.cpp	/^bool CSocket::Send(const char* pszBuf, int nBufLen)$/;"	f	class:CSocket
SendAttachment	mail.cpp	/^bool CMail::SendAttachment()	\/\/发送附件$/;"	f	class:CMail
SendEmailBody	mail.cpp	/^bool CMail::SendEmailBody(const char* pszMailTxt, int nLen)	\/\/发送文本信息$/;"	f	class:CMail
SendEmailEnd	mail.cpp	/^bool CMail::SendEmailEnd()	\/\/发送邮件结束信息 $/;"	f	class:CMail
SendEmailHead	mail.cpp	/^bool CMail::SendEmailHead(std::vector<std::string> &listContactor)	\/\/放邮件头部信息$/;"	f	class:CMail
SendMail	mail.cpp	/^bool CMail::SendMail(std::vector<std::string>& listContactor,const char* pszMailTxt)$/;"	f	class:CMail
SendNotify	Notify.cpp	/^bool CNotify::SendNotify()$/;"	f	class:CNotify
SendNotify	mail.cpp	/^bool CMail::SendNotify()$/;"	f	class:CMail
SendNotifyInfo	Notify.cpp	/^bool CNotify::SendNotifyInfo(const char* pszInfo, int nBufLen)$/;"	f	class:CNotify
SetBlockMode	Socket.cpp	/^void CSocket::SetBlockMode(int nMode\/* = O_NONBLOCK*\/)$/;"	f	class:CSocket
SetSockOpt	Socket.cpp	/^bool CSocket::SetSockOpt(int nLevel, int nOptanme, const void* Optval, socklen_t OptLen)$/;"	f	class:CSocket
Terminate	Service.cpp	/^void CService::Terminate()$/;"	f	class:CService
TimeOut	Service.cpp	/^static void TimeOut(CService* pService)$/;"	f	file:
TimerHandle	Service.cpp	/^void TimerHandle(int sino)$/;"	f
UpdateConfig	NotifyMgr.cpp	/^bool CNotifyMgr::UpdateConfig(const char* pszConfigFileName)$/;"	f	class:CNotifyMgr
UpdateContactorInfo	Contactor.cpp	/^bool  CContactor::UpdateContactorInfo()$/;"	f	class:CContactor
_SERVICE_H_	Service.h	2;"	d
__LOGINIT__	Log.h	8;"	d
emITUint	Notify.h	/^enum emITUint$/;"	g
g_CIAlarmService	AlarmService.cpp	/^class CAlarmService* g_CIAlarmService = nullptr;$/;"	v	typeref:class:CAlarmService
g_Service	Service.cpp	/^class CService* g_Service = nullptr;$/;"	v	typeref:class:CService
isNotify	Contactor.h	/^	bool isNotify(int nLvl)$/;"	f	struct:stContactor
listFocus	Contactor.h	/^	std::vector<std::string>  listFocus;$/;"	m	struct:stContactor
m_bStop	Service.h	/^	bool		m_bStop;$/;"	m	class:CService
m_clsLock	Contactor.h	/^	CICCTools::AtomLock									m_clsLock;	$/;"	m	class:CContactor
m_clsLock	NotifyMgr.h	/^	CICCTools::AtomLock			m_clsLock;$/;"	m	class:CNotifyMgr
m_fd	Socket.h	/^	int		m_fd;		\/\/Socket handle $/;"	m	class:CSocket
m_listContactor	Contactor.h	/^	std::unordered_map<int, CONTACTORPtr>				m_listContactor;$/;"	m	class:CContactor
m_listNotify	NotifyMgr.h	/^	std::vector<CNotify*>		m_listNotify;	$/;"	m	class:CNotifyMgr
m_mapContactor	Contactor.h	/^	std::map<std::string, std::vector<CONTACTORPtr>* >	m_mapContactor;$/;"	m	class:CContactor
m_nPort	AlarmService.h	/^	int				m_nPort;	\/\/监听端口号 $/;"	m	class:CAlarmService
m_nPort	mail.h	/^	int			m_nPort;					\/\/ 邮件服务器端口号$/;"	m	class:CMail
m_nType	Notify.h	/^	int			m_nType;			\/\/Notify Type $/;"	m	class:CNotify
m_pContactor	NotifyMgr.h	/^	CContactor*					m_pContactor;$/;"	m	class:CNotifyMgr
m_pNotify	AlarmService.h	/^	CNotifyMgr*		m_pNotify;	\/\/通知管理类$/;"	m	class:CAlarmService
m_pSocket	Notify.h	/^	CSocket*  m_pSocket;$/;"	m	class:CNotify
m_pszConfigFileName	Notify.h	/^	char	m_pszConfigFileName[256];$/;"	m	class:CNotify
m_szContactorFileName	Contactor.h	/^	char												m_szContactorFileName[256];$/;"	m	class:CContactor
m_szDefaultSendMail	mail.h	/^	char		m_szDefaultSendMail[64];	\/\/默认发送邮件账户名$/;"	m	class:CMail
m_szEmailSvrName	mail.h	/^	char		m_szEmailSvrName[64];		\/\/邮件服务器名称$/;"	m	class:CMail
m_szSecret	mail.h	/^	char		m_szSecret[64];				\/\/账户密码$/;"	m	class:CMail
m_szUserName	mail.h	/^	char		m_szUserName[64];			\/\/账户名$/;"	m	class:CMail
m_tLastModifyTime	Contactor.h	/^	time_t												m_tLastModifyTime;$/;"	m	class:CContactor
m_tStart	Service.h	/^	time_t		m_tStart;$/;"	m	class:CService
main	ServiceMain.cpp	/^int main()$/;"	f
nDepartment	Contactor.h	/^	int		nDepartment;$/;"	m	struct:stContactor
nDepartment	Notify.h	/^	int		nDepartment;		\/\/$/;"	m	struct:stContactorInfo
nLevel	Contactor.h	/^	int		nLevel;$/;"	m	struct:stContactor
nNO	Contactor.h	/^	int		nNO;			\/\/工号$/;"	m	struct:stContactor
nNo	Notify.h	/^	int		nNo;				\/\/工号 $/;"	m	struct:stContactorInfo
stContactor	Contactor.h	/^	stContactor()$/;"	f	struct:stContactor
stContactor	Contactor.h	/^	stContactor(int _nNo, const char* pszName, const char* pszEmail, int _nDepartment):nNO(_nNo),nDepartment(_nDepartment)$/;"	f	struct:stContactor
stContactor	Contactor.h	/^	stContactor(stContactor* pInfo)$/;"	f	struct:stContactor
stContactor	Contactor.h	/^typedef struct stContactor$/;"	s
stContactorInfo	Notify.h	/^typedef struct stContactorInfo$/;"	s
szEmail	Contactor.h	/^	char	szEmail[BUFLEN_TYPE_EMAIL];$/;"	m	struct:stContactor
szEmail	Notify.h	/^	char	szEmail[BUFLEN_EMAIL];$/;"	m	struct:stContactorInfo
szName	Contactor.h	/^	char	szName[BUFLEN_TYPE_NAME];$/;"	m	struct:stContactor
szName	Notify.h	/^	char	szName[BUFLEN_USERNAME];$/;"	m	struct:stContactorInfo
~CAlarmService	AlarmService.cpp	/^CAlarmService::~CAlarmService()$/;"	f	class:CAlarmService
~CContactor	Contactor.cpp	/^CContactor::~CContactor()$/;"	f	class:CContactor
~CMail	mail.cpp	/^CMail::~CMail()$/;"	f	class:CMail
~CNotify	Notify.cpp	/^CNotify::~CNotify()$/;"	f	class:CNotify
~CNotifyMgr	NotifyMgr.cpp	/^CNotifyMgr::~CNotifyMgr()$/;"	f	class:CNotifyMgr
~CService	Service.cpp	/^CService::~CService()$/;"	f	class:CService
~CSocket	Socket.cpp	/^CSocket::~CSocket()$/;"	f	class:CSocket
